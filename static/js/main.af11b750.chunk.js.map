{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/Geo.js","panels/Message.js","App.js","index.js","img/persik.png"],"names":["Home","_ref","id","message","fetchedUser","groupinvite","react_default","a","createElement","vkui","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","className","href","target","osname","platform","Persik","props","left","go","IOS","chevron_back_default","back_default","persik","alt","Geo","_this","this","connect","send","subscribe","e","detail","type","console","log","setState","activePanel","geo","React","Component","Message","group_id","key","data","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","currentTarget","dataset","to","state","_this2","phone_number","panels_Home","src_panels_Persik","panels_Geo","panels_Message","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.af11b750.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, Link } from '@vkontakte/vkui';\nimport './../style.css';\n\nconst Home = ({ id, message, fetchedUser, groupinvite }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Пхукет</PanelHeader>\n\t\t{fetchedUser &&\n\t\t\t<Group title=\"Добро Пожаловать на Пхукет!\">\n\t\t\t\t<ListItem\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</ListItem>\n\t\t\t</Group>}\n\n\t\t<Group title=\"Подпишись на Русское сообщество\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={groupinvite} data-to=\"groupinvite\">\n\t\t\t\t\tПодписаться\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t<Group title=\"Получить Приветствие от сообщества\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={message} data-to=\"groupinvite\">\n\t\t\t\t\tПолучить приветствие!\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t<Group title=\"Написать нам в мессенджеры\">\n\t\t\t<Div>\n\t\t\t\t<Button className=\"button-wharsapp\" size=\"xl\" level=\"2\" onClick={message} data-to=\"groupinvite\">\n\t\t\t\t\t<Link className=\"button-wharsapp\" href=\"viber://pa?chatURI=surgut.\" target=\"_blank\">WhatsApp</Link>\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"button-viber\" size=\"xl\" level=\"2\" onClick={message} data-to=\"groupinvite\">\n\t\t\t\t\t<Link className=\"button-viber\" href=\"viber://pa?chatURI=surgut.\" target=\"_blank\">Viber</Link>\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"button-telegtam\" size=\"xl\" level=\"2\" onClick={message} data-to=\"groupinvite\">\n\t\t\t\t\t<Link className=\"button-telegtam\" href=\"https://t.me/exkursii_bot\" target=\"_blank\">Telegram</Link>\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\nimport connect from '@vkontakte/vkui-connect';\n\nimport Home from './Home';\n\n// const Geo = ({ id, go, fetchedUser }) => {\n\nclass Geo extends React.Component {\n    // constructor(props) {\n    //     super(props);\n\n    //     this.state = {\n    //         activePanel: 'geo',\n    //         // fetchedUser: null,\n    //     };\n    // }\n\n    componentDidMount() {\n        connect.send(\"VKWebAppGetGeodata\", {});\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetGeodataResult':\n                    console.log(e.detail);\n                    this.props.setState({ activePanel: 'message' });\n                    break;\n                default:\n                    console.log(e.detail.type);\n                    console.log(e.detail);\n                    console.log(\"this.props.activePanel\" ,this.props.activePanel);\n                    this.props.setState({ activePanel: 'message' });\n                    // if (e.detail.data.available) {\n                    //     this.props.setState({ activePanel: 'message' });\n                    // }\n            }\n        });\n\n    }\n\n\n\n    // connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 52628657, \"key\": \"dBuBKe1kFcdemzB\"});\n    render() {\n        return (\n            \n            <Panel id={this.props.id}>\n                <PanelHeader>Геопозиция</PanelHeader>\n\n\n                <Group title=\"Для работы приложения нужна Геопозиция\">\n                    <Div>\n                        <Button size=\"xl\" level=\"2\" onClick={this.props.geo} data-to=\"geo-button\">\n                            Разрешить доступ к Гео\n\t\t\t\t</Button>\n                    </Div>\n                </Group>\n            </Panel>\n        )\n    }\n}\n\nGeo.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Geo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\nimport connect from '@vkontakte/vkui-connect';\n\n// const Geo = ({ id, go, fetchedUser }) => {\n\nclass Message extends React.Component {\n    // constructor(props) {\n    //     super(props);\n\n    //     this.state = {\n    //         activePanel: 'message',\n    //         // fetchedUser: null,\n    //     };\n    // }\n\n    componentDidMount() {\n        connect.send(\"VKWebAppAllowMessagesFromGroup\", { \"group_id\": 52628657, \"key\": \"dBuBKe1kFcdemzB\" });\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppAllowMessagesFromGroupResult':\n                    // this.setState({ fetchedUser: e.detail.data });\n                    console.log(e.detail.data);\n                    console.log(\"this.props.activePanel\" ,this.props.activePanel);\n                    this.props.setState({ activePanel: 'home' });\n                    break;\n                default:\n                    console.log(e.detail.type);\n                    // if (e.detail.data.result) {\n                    //     this.props.setState({ activePanel: 'message', });\n                    // }\n            }\n        });\n\n    }\n\n\n\n    // connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 52628657, \"key\": \"dBuBKe1kFcdemzB\"});\n    render() {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader>Геопозиция</PanelHeader>\n\n\n                <Group title=\"Получить сообщение\">\n                    <Div>\n                        <Button size=\"xl\" level=\"2\" onClick={this.props.message} data-to=\"persik\">\n                        Разрешить написать сообществу\n\t\t\t\t</Button>\n                    </Div>\n                </Group>\n            </Panel>\n        )\n    }\n}\n\nMessage.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Message;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Geo from './panels/Geo';\nimport Message from './panels/Message';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tconsole.log(e.detail.data);\n\n\t\t\t\t\t// Получение телефона и емайл\n\t\t\t\t\tconnect.send(\"VKWebAppGetPhoneNumber\", {});\n\t\t\t\t\tconnect.subscribe((e) => {\n\t\t\t\t\t\tswitch (e.detail.type) {\n\t\t\t\t\t\t\tcase 'VKWebAppGetPhoneNumberResult':\n\t\t\t\t\t\t\t\tthis.setState({ activePanel: 'home' });\n\t\t\t\t\t\t\t\tconsole.log(e.detail.data.phone_number);\n\t\t\t\t\t\t\t\t\n\n\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\t\t\t\tconsole.log(e.detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tmessage = (e) => {\n\n\t\t// Доступ Писать от сообщества\n\t\tconnect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 52628657, \"key\": \"dBuBKe1kFcdemzB\"});\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppAllowMessagesFromGroupResult':\n\t\t\t\t\tconsole.log(e.detail.data.result);\n\t\t\t\t\t\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\t\n\t\t\t}\n\t\t});\n\t};\n\n\tgroupinvite = (e) => {\n\t\tconnect.send(\"VKWebAppJoinGroup\", {\"group_id\": 52628657});\n\t}\n\n\tgeo = (e) => {\n\n\t\t// Получение Гео\n\t\tconnect.send(\"VKWebAppGetGeodata\", {});\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetGeodataResult':\n\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t\t\tthis.setState({ activePanel: 'message' });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\n\n\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} groupinvite={this.groupinvite} message={this.message}/>\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t\t<Geo id=\"geo\" geo={this.geo} go={this.go} activePanel={this.state.activePanel}/>\n\t\t\t\t<Message id=\"message\" message={this.message} go={this.go} activePanel={this.state.activePanel}/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}