{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/Geo.js","App.js","index.js","img/persik.png"],"names":["Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","osname","platform","Persik","props","left","IOS","chevron_back_default","back_default","className","persik","alt","Geo","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","activePanel","currentTarget","dataset","to","state","_this2","connect","subscribe","detail","type","data","console","log","send","panels_Home","src_panels_Persik","panels_Geo","React","Component","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8f73a1be.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\n\nconst Geo = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Геопозиция</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nGeo.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Geo;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Geo from './panels/Geo';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tconsole.log(e.detail.data);\n\n\t\t\t\t\t// Получение телефона и емайл\n\t\t\t\t\tconnect.send(\"VKWebAppGetPersonalCard\", {\"type\": [\"phone\", \"email\"]});\n\t\t\t\t\tconnect.subscribe((e) => {\n\t\t\t\t\t\t\tswitch (e.detail.type) {\n\t\t\t\t\t\t\t\tcase 'VKWebAppGetPersonalCardResult':\n\t\t\t\t\t\t\t\t\tthis.setState({ activePanel: 'geo' });\n\t\t\t\t\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t\t\t\t\t\t\t\n\t\n\t\t\t\t\t\t\t\t\t\n\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\n\n\n\n\n\t\t\t\t\t// connect.send(\"VKWebAppGetGeodata\", {});\n\t\t\t\t\t// connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 1, \"key\": \"dBuBKe1kFcdemzB\"});\n\t\t\t\t\t// connect.send(\"VKWebAppJoinGroup\", {\"group_id\": 52628657});\n\t\t\t\t\t// \n\n\n\n\t\t\t\t\t// // Получение Гео\n\t\t\t\t\t// \t\t\tconnect.send(\"VKWebAppGetGeodata\", {});\n\t\t\t\t\t// \t\t\tconnect.subscribe((e) => {\n\t\t\t\t\t// \t\t\t\tswitch (e.detail.type) {\n\t\t\t\t\t// \t\t\t\t\tcase 'VKWebAppGetPersonalCardResult':\n\t\t\t\t\t// \t\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t// \t\t\t\t\t\t// Разрешить сообществу писать\n\t\t\t\t\t// \t\t\t\t\t\tconnect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 1, \"key\": \"dBuBKe1kFcdemzB\"});\n\t\t\t\t\t// \t\t\t\t\t\tconnect.subscribe((e) => {\n\t\t\t\t\t// \t\t\t\t\t\t\tswitch (e.detail.type) {\n\t\t\t\t\t// \t\t\t\t\t\t\t\tcase 'VKWebAppAllowMessagesFromGroupResult':\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t// Разрешить сообществу писать\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\tconnect.send(\"VKWebAppJoinGroup\", {\"group_id\": 52628657});\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\tconnect.subscribe((e) => {\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\tswitch (e.detail.type) {\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\tcase 'VKWebAppJoinGroupResult':\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t// \t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\t// \t\t\t\t\t\t\t}\n\t\t\t\t\t// \t\t\t\t\t\t});\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// \t\t\t\t\t\tbreak;\n\t\t\t\t\t// \t\t\t\t\tdefault:\n\t\t\t\t\t// \t\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\t// \t\t\t\t}\n\t\t\t\t\t// \t\t\t});\n\n\n\n\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\n\t\n\n\n\n\n\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t\t<Geo id=\"geo\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}